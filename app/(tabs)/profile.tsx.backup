import React, { useState } from 'react';
import { TouchableOpacity, StyleSheet, Modal, ScrollView, View, Image } from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { Ionicons } from '@expo/vector-icons';
import AuraBackground from '@/components/AuraBackground';
import { ThemedView } from '@/components/ThemedView';
import { ThemedText } from '@/components/ThemedText';
import PremiumScreen from '@/components/PremiumScreen';
import EditProfileModal from '@/components/EditProfileModal';
import { useRevenueCat } from '@/components/RevenueCatProvider';

export default function ProfileScreen() {
  const [showPremiumModal, setShowPremiumModal] = useState(false);
  const [showEditProfileModal, setShowEditProfileModal] = useState(false);
  const [showSettingsModal, setShowSettingsModal] = useState(false);
  const [profileImage, setProfileImage] = useState<string | null>(null);
  const { isPremium } = useRevenueCat();

  return (
    <AuraBackground>
      <ThemedView style={styles.container}>
        {/* Settings Gear Icon */}
        <TouchableOpacity 
          style={styles.settingsGear}
          onPress={() => setShowSettingsModal(true)}
        >
          <LinearGradient
            colors={['rgba(52, 152, 219, 0.2)', 'rgba(155, 89, 182, 0.1)']}
            style={styles.gearBackground}
          >
            <Ionicons name="settings" size={24} color="#2c3e50" />
          </LinearGradient>
        </TouchableOpacity>

        <ScrollView contentContainerStyle={styles.scrollContent}>
          {/* Large Profile Photo Section */}
          <View style={styles.profilePhotoSection}>
            <TouchableOpacity 
              onPress={() => setShowEditProfileModal(true)}
              style={styles.profilePhotoContainer}
            >
              <LinearGradient
                colors={['rgba(52, 152, 219, 0.2)', 'rgba(155, 89, 182, 0.1)']}
                style={styles.profilePhotoGradient}
              >
                {profileImage ? (
                  <Image source={{ uri: profileImage }} style={styles.profilePhoto} />
                ) : (
                  <View style={styles.placeholderPhoto}>
                    <Ionicons name="person" size={80} color="#bdc3c7" />
                  </View>
                )}
                <View style={styles.editPhotoOverlay}>
                  <Ionicons name="camera" size={24} color="white" />
                </View>
              </LinearGradient>
            </TouchableOpacity>
            <ThemedText style={styles.profileName}>Your Name</ThemedText>
            <ThemedText style={styles.profileLocation}>üìç Your Location</ThemedText>
          </View>

          <ThemedText type="title" style={styles.title}>Notifications</ThemedText>
          
          {/* Notifications List */}
          <View style={styles.notificationsContainer}>
            <NotificationItem 
              title="New Match!"
              message="You have a new match with Sarah"
              time="2 min ago"
              type="match"
              unread={true}
            />
            <NotificationItem 
              title="Message Received"
              message="Alex sent you a message"
              time="15 min ago"
              type="message"
              unread={true}
            />
            <NotificationItem 
              title="Profile View"
              message="Someone viewed your profile"
              time="1 hour ago"
              type="view"
              unread={false}
            />
            <NotificationItem 
              title="Weekly Summary"
              message="You had 5 profile views this week"
              time="1 day ago"
              type="summary"
              unread={false}
            />
            <NotificationItem 
              title="Premium Offer"
              message="Get 50% off Premium this week!"
              time="2 days ago"
              type="offer"
              unread={false}
            />
          </View>

          {/* TikTok-style Preview Section */}
          <View style={styles.previewSection}>
            <ThemedText type="subtitle" style={styles.previewTitle}>Your Posts</ThemedText>
            <View style={styles.previewGrid}>
              <TouchableOpacity style={styles.previewItem}>
                <View style={styles.previewThumbnail}>
                  <Ionicons name="play" size={24} color="#fff" />
                </View>
                <ThemedText style={styles.previewText}>Math Tutorial</ThemedText>
                <ThemedText style={styles.previewViews}>1.2k views</ThemedText>
              </TouchableOpacity>
              
              <TouchableOpacity style={styles.previewItem}>
                <View style={styles.previewThumbnail}>
                  <Ionicons name="play" size={24} color="#fff" />
                </View>
                <ThemedText style={styles.previewText}>Chemistry Help</ThemedText>
                <ThemedText style={styles.previewViews}>854 views</ThemedText>
              </TouchableOpacity>
              
              <TouchableOpacity style={styles.previewItem}>
                <View style={styles.previewThumbnail}>
                  <Ionicons name="play" size={24} color="#fff" />
                </View>
                <ThemedText style={styles.previewText}>Study Tips</ThemedText>
                <ThemedText style={styles.previewViews}>2.1k views</ThemedText>
              </TouchableOpacity>
              
              <TouchableOpacity style={styles.previewItem}>
                <View style={styles.previewThumbnail}>
                  <Ionicons name="play" size={24} color="#fff" />
                </View>
                <ThemedText style={styles.previewText}>Physics Demo</ThemedText>
                <ThemedText style={styles.previewViews}>673 views</ThemedText>
              </TouchableOpacity>
              
              <TouchableOpacity style={styles.previewItem}>
                <View style={styles.previewThumbnail}>
                  <Ionicons name="play" size={24} color="#fff" />
                </View>
                <ThemedText style={styles.previewText}>English Grammar</ThemedText>
                <ThemedText style={styles.previewViews}>1.5k views</ThemedText>
              </TouchableOpacity>
              
              <TouchableOpacity style={styles.previewItem}>
                <View style={styles.previewThumbnail}>
                  <Ionicons name="play" size={24} color="#fff" />
                </View>
                <ThemedText style={styles.previewText}>History Lesson</ThemedText>
                <ThemedText style={styles.previewViews}>920 views</ThemedText>
              </TouchableOpacity>
            </View>
          </View>
        </ScrollView>

        {/* Premium Modal */}
        <Modal
          visible={showPremiumModal}
          animationType="slide"
          presentationStyle="pageSheet"
        >
          <PremiumScreen onClose={() => setShowPremiumModal(false)} />
        </Modal>

        {/* Edit Profile Modal */}
        <EditProfileModal
          visible={showEditProfileModal}
          onClose={() => setShowEditProfileModal(false)}
          onProfileImageChange={(imageUri) => setProfileImage(imageUri)}
          initialProfileImage={profileImage}
        />

        {/* Settings Modal */}
        <Modal
          visible={showSettingsModal}
          animationType="slide"
          presentationStyle="pageSheet"
        >
          <ThemedView style={styles.settingsModal}>
            <View style={styles.settingsHeader}>
              <TouchableOpacity onPress={() => setShowSettingsModal(false)} style={styles.closeButton}>
                <Ionicons name="close" size={24} color="#2c3e50" />
              </TouchableOpacity>
              <ThemedText type="title" style={styles.settingsTitle}>Settings</ThemedText>
              <View style={styles.spacer} />
            </View>
            
            <ScrollView style={styles.settingsContent}>
              <ProfileSection 
                title="Account Settings" 
                items={['Edit Profile', 'Privacy Settings', 'Notification Preferences']}
                onItemPress={(item) => {
                  if (item === 'Edit Profile') {
                    setShowSettingsModal(false);
                    setShowEditProfileModal(true);
                  }
                }}
              />
              
              <ProfileSection 
                title="App Features" 
                items={
                  isPremium 
                    ? ['Advanced Matching', 'Priority Support', 'Exclusive Themes']
                    : ['Basic Features', 'Standard Support']
                }
              />
              
              <ProfileSection 
                title="Support" 
                items={[
                  'Help Center',
                  'Contact Support',
                  'Terms of Service',
                  'Privacy Policy',
                ]}
              />
            </ScrollView>
          </ThemedView>
        </Modal>
      </ThemedView>
    </AuraBackground>
  );
            
            <ScrollView style={styles.settingsContent}>
              <View style={styles.notificationsContainer}>
                <View style={[styles.notificationItem, styles.unreadNotification]}>
                  <LinearGradient
                    colors={['rgba(52, 152, 219, 0.1)', 'rgba(155, 89, 182, 0.05)']}
                    style={styles.notificationGradient}
                  >
                    <View style={styles.notificationIcon}>
                      <Ionicons name="heart" size={20} color="#e74c3c" />
                    </View>
                    <View style={styles.notificationContent}>
                      <ThemedText type="defaultSemiBold" style={styles.notificationTitle}>
                        Sarah M. liked your profile
                      </ThemedText>
                      <ThemedText style={styles.notificationTime}>2 hours ago</ThemedText>
                    </View>
                    <View style={styles.notificationDot} />
                  </LinearGradient>
                </View>
                
                <View style={[styles.notificationItem, styles.unreadNotification]}>
                  <LinearGradient
                    colors={['rgba(52, 152, 219, 0.1)', 'rgba(155, 89, 182, 0.05)']}
                    style={styles.notificationGradient}
                  >
                    <View style={styles.notificationIcon}>
                      <Ionicons name="school" size={20} color="#3498db" />
                    </View>
                    <View style={styles.notificationContent}>
                      <ThemedText type="defaultSemiBold" style={styles.notificationTitle}>
                        New tutoring request in Mathematics
                      </ThemedText>
                      }
                    </View>
                    <View style={styles.notificationDot} />
                  </LinearGradient>
                </View>
                
                <View style={styles.notificationItem}>
                  <LinearGradient
                    colors={['rgba(52, 152, 219, 0.05)', 'rgba(155, 89, 182, 0.02)']}
                    style={styles.notificationGradient}
                  >
                    <View style={styles.notificationIcon}>
                      <Ionicons name="chatbubble" size={20} color="#95a5a6" />
                    </View>
                    <View style={styles.notificationContent}>
                      <ThemedText type="default" style={styles.notificationTitle}>
                        Alex J. sent you a message
                      </ThemedText>
                      <ThemedText style={styles.notificationTime}>1 day ago</ThemedText>
                    </View>
                  </LinearGradient>
                </View>
                
                <View style={styles.notificationItem}>
                  <LinearGradient
                    colors={['rgba(52, 152, 219, 0.05)', 'rgba(155, 89, 182, 0.02)']}
                    style={styles.notificationGradient}
                  >
                    <View style={styles.notificationIcon}>
                      <Ionicons name="calendar" size={20} color="#95a5a6" />
                    </View>
                    <View style={styles.notificationContent}>
                      <ThemedText type="default" style={styles.notificationTitle}>
                        Your session with Emma is starting soon
                      </ThemedText>
                      <ThemedText style={styles.notificationTime}>2 days ago</ThemedText>
                    </View>
                  </LinearGradient>
                </View>
              </View>
            </ScrollView>
          </ThemedView>
        </Modal>
      </ThemedView>
    </AuraBackground>
  );
}

interface ProfileSectionProps {
  title: string;
  items: string[];
  onItemPress?: (item: string) => void;
}

interface NotificationItemProps {
  title: string;
  message: string;
  time: string;
  type: 'match' | 'message' | 'view' | 'summary' | 'offer';
  unread: boolean;
}

const NotificationItem: React.FC<NotificationItemProps> = ({ title, message, time, type, unread }) => {
  const getIcon = () => {
    switch (type) {
      case 'match': return 'heart';
      case 'message': return 'chatbubble';
      case 'view': return 'eye';
      case 'summary': return 'stats-chart';
      case 'offer': return 'gift';
      default: return 'notifications';
    }
  };

  const getIconColor = () => {
    switch (type) {
      case 'match': return '#e74c3c';
      case 'message': return '#3498db';
      case 'view': return '#f39c12';
      case 'summary': return '#9b59b6';
      case 'offer': return '#27ae60';
      default: return '#7f8c8d';
    }
  };

  return (
    <TouchableOpacity style={[styles.notificationItem, unread && styles.unreadNotification]}>
      <LinearGradient
        colors={['rgba(255, 255, 255, 0.1)', 'rgba(245, 245, 220, 0.05)']}
        style={styles.notificationGradient}
      >
        <View style={styles.notificationIcon}>
          <Ionicons name={getIcon()} size={20} color={getIconColor()} />
        </View>
        <View style={styles.notificationContent}>
          <View style={styles.notificationHeader}>
            <ThemedText style={[styles.notificationTitle, unread && styles.unreadText]}>{title}</ThemedText>
            <ThemedText style={styles.notificationTime}>{time}</ThemedText>
          </View>
          <ThemedText style={styles.notificationMessage}>{message}</ThemedText>
        </View>
        {unread && <View style={styles.unreadDot} />}
      </LinearGradient>
    </TouchableOpacity>
  );
};

const ProfileSection: React.FC<ProfileSectionProps> = ({ title, items, onItemPress }) => (
  <View style={styles.section}>
    <ThemedText type="subtitle" style={styles.sectionTitle}>{title}</ThemedText>
    {items.map((item, index) => (
      <TouchableOpacity 
        key={index} 
        style={styles.sectionItem}
        onPress={() => onItemPress?.(item)}
      >
        <LinearGradient
          colors={['rgba(255, 255, 255, 0.1)', 'rgba(245, 245, 220, 0.05)']}
          style={styles.itemGradient}
        >
          <ThemedText style={styles.itemText}>{item}</ThemedText>
          <ThemedText style={styles.itemArrow}>‚Ä∫</ThemedText>
        </LinearGradient>
      </TouchableOpacity>
    ))}
  </View>
);

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'transparent',
  },
  topRightIcons: {
    position: 'absolute',
    top: 60,
    right: 20,
    flexDirection: 'row',
    zIndex: 1000,
    gap: 10,
  },
  iconButton: {
    // No additional styles needed, the gradient handles sizing
  },
  iconBackground: {
    width: 44,
    height: 44,
    borderRadius: 22,
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
    position: 'relative',
  },
  notificationBadge: {
    position: 'absolute',
    top: -2,
    right: -2,
    backgroundColor: '#e74c3c',
    borderRadius: 8,
    minWidth: 16,
    height: 16,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: '#fff',
  },
  badgeText: {
    color: '#fff',
    fontSize: 10,
    fontWeight: 'bold',
  },
  settingsGear: {
    position: 'absolute',
    top: 60,
    right: 20,
    zIndex: 1000,
  },
  gearBackground: {
    width: 44,
    height: 44,
    borderRadius: 22,
    justifyContent: 'center',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  scrollContent: {
    paddingHorizontal: 20,
    paddingTop: 60,
    paddingBottom: 40,
  },
  profilePhotoSection: {
    alignItems: 'center',
    marginBottom: 40,
  },
  profilePhotoContainer: {
    marginBottom: 16,
  },
  profilePhotoGradient: {
    width: 160,
    height: 160,
    borderRadius: 80,
    justifyContent: 'center',
    alignItems: 'center',
    position: 'relative',
    borderWidth: 4,
    borderColor: 'rgba(255, 255, 255, 0.8)',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.3,
    shadowRadius: 6,
    elevation: 8,
  },
  profilePhoto: {
    width: 152,
    height: 152,
    borderRadius: 76,
  },
  placeholderPhoto: {
    width: 152,
    height: 152,
    borderRadius: 76,
    backgroundColor: 'rgba(236, 240, 241, 0.8)',
    justifyContent: 'center',
    alignItems: 'center',
  },
  editPhotoOverlay: {
    position: 'absolute',
    bottom: 8,
    right: 8,
    backgroundColor: '#3498db',
    borderRadius: 20,
    width: 40,
    height: 40,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 3,
    borderColor: 'white',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  profileName: {
    fontSize: 24,
    fontWeight: '700',
    color: '#2c3e50',
    marginBottom: 4,
    textAlign: 'center',
  },
  profileLocation: {
    fontSize: 16,
    color: '#7f8c8d',
    textAlign: 'center',
    marginBottom: 8,
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 30,
    color: '#2c3e50',
  },
  premiumSection: {
    marginBottom: 30,
    alignItems: 'center',
  },
  premiumBadge: {
    borderRadius: 16,
    overflow: 'hidden',
    minWidth: 200,
  },
  premiumGradient: {
    paddingVertical: 12,
    paddingHorizontal: 24,
    alignItems: 'center',
  },
  premiumText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '600',
  },
  upgradeButton: {
    borderRadius: 16,
    overflow: 'hidden',
    minWidth: 200,
  },
  upgradeGradient: {
    paddingVertical: 16,
    paddingHorizontal: 24,
    alignItems: 'center',
  },
  upgradeText: {
    color: 'white',
    fontSize: 18,
    fontWeight: '600',
  },
  notificationsContainer: {
    gap: 12,
  },
  notificationItem: {
    borderRadius: 12,
    overflow: 'hidden',
  },
  unreadNotification: {
    shadowColor: '#3498db',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  notificationGradient: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 16,
    position: 'relative',
  },
  notificationIcon: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.8)',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 12,
  },
  notificationContent: {
    flex: 1,
  },
  notificationHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 4,
  },
  notificationTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: '#2c3e50',
    flex: 1,
  },
  unreadText: {
    color: '#2c3e50',
    fontWeight: '700',
  },
  notificationTime: {
    fontSize: 12,
    color: '#7f8c8d',
  },
  notificationMessage: {
    fontSize: 14,
    color: '#34495e',
  },
  unreadDot: {
    position: 'absolute',
    top: 12,
    right: 12,
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#3498db',
  },
  settingsModal: {
    flex: 1,
    backgroundColor: 'rgba(240, 248, 255, 0.95)',
  },
  settingsHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    paddingTop: 60,
    paddingBottom: 20,
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(52, 73, 94, 0.1)',
  },
  closeButton: {
    padding: 8,
  },
  settingsTitle: {
    fontSize: 20,
    fontWeight: '600',
    color: '#2c3e50',
  },
  spacer: {
    width: 40,
  },
  settingsContent: {
    flex: 1,
    paddingHorizontal: 20,
    paddingTop: 20,
  },
  profileSections: {
    gap: 24,
  },
  section: {
    marginBottom: 8,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: '600',
    marginBottom: 12,
    color: '#2c3e50',
  },
  sectionItem: {
    marginBottom: 8,
    borderRadius: 12,
    overflow: 'hidden',
  },
  itemGradient: {
    paddingVertical: 16,
    paddingHorizontal: 20,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  itemText: {
    fontSize: 16,
    color: '#34495e',
  },
  itemArrow: {
    fontSize: 20,
    color: '#7f8c8d',
  },
  notificationDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#3498db',
  },
  previewSection: {
    marginTop: 40,
    paddingHorizontal: 4,
  },
  previewTitle: {
    fontSize: 20,
    fontWeight: '600',
    color: '#2c3e50',
    marginBottom: 20,
    textAlign: 'center',
  },
  previewGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    gap: 8,
  },
  previewItem: {
    width: '32%',
    aspectRatio: 9/16,
    borderRadius: 12,
    overflow: 'hidden',
    backgroundColor: '#f8f9fa',
    marginBottom: 8,
  },
  previewThumbnail: {
    flex: 1,
    backgroundColor: '#3498db',
    justifyContent: 'center',
    alignItems: 'center',
    position: 'relative',
  },
  previewText: {
    fontSize: 11,
    fontWeight: '600',
    color: '#2c3e50',
    paddingHorizontal: 6,
    paddingVertical: 4,
    textAlign: 'center',
  },
  previewViews: {
    fontSize: 9,
    color: '#7f8c8d',
    paddingHorizontal: 6,
    paddingBottom: 4,
    textAlign: 'center',
  },
});
